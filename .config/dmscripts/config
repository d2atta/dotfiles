#!/usr/bin/env bash
# shellcheck disable=SC2034
# This issue is ignored because it is part of a larger file that calls upon all variables listed

# Defined variables, modify anything in quotes to your preferred software
# -p is needed as we use prompts, alternative programs have to handle prompts well.

DMENU="dmenu -i -l 20 -p"
EMOJI_FILE=~/".local/share/emoji"
DMBROWSER="brave"
DMTERM="st -e"
DMEDITOR="${DMTERM} nvim"   # "emacsclient -c -a emacs"
logout_locker='slock'


# dm-confedit
declare -A confedit_list
confedit_list[alacritty]="$HOME/.config/alacritty/alacritty.yml"
confedit_list[aliases]="$HOME/.config/shell/aliasrc"
confedit_list[bash]="$HOME/.bashrc"
confedit_list[confedit]="$HOME/.config/dmscripts/config"
confedit_list[doom emacs config.el]="$HOME/.config/doom/config.el"
confedit_list[doom emacs config.org]="$HOME/.config/doom/config.org"
confedit_list[doom emacs init.el]="$HOME/.config/doom/init.el"
confedit_list[doom emacs packages.el]="$HOME/.config/doom/packages.el"
confedit_list[dunst]="$HOME/.config/dunst/dunstrc"
confedit_list[dwm]="$HOME/.local/src/dwm/config.def.h"
confedit_list[dwmbar]="$HOME/.config/dwm/bar.sh"
confedit_list[fish]="$HOME/.config/fish/config.fish"
confedit_list[lf]="$HOME/.config/lf/lfrc"
confedit_list[ncmpcpp]="$HOME/.config/ncmpcpp/config"
confedit_list[neovim]="$HOME/.config/nvim/lua/custom/init.lua"
confedit_list[picom]="$HOME/.config/picom/picom.conf"
confedit_list[profile]="$HOME/.config/shell/profile"
confedit_list[ssh]="$HOME/.ssh/config"
confedit_list[st]="$HOME/.local/src/st/config.def.h"
confedit_list[sxhkd]="$HOME/.config/sxhkd/sxhkdrc"
confedit_list[tabbed]="$HOME/.local/src/tabbed/config.def.h"
confedit_list[xinitrc]="$HOME/.config/x11/xinitrc"
confedit_list[xresources]="$HOME/.config/x11/.Xresources"
confedit_list[zsh]="$HOME/.config/zsh/.zshrc"
confedit_list[zathura]="$HOME/.config/zathura/zathurarc"
confedit_list[starship]="$HOME/.config/starship.toml"

# dm-reddit config
declare -a reddit_list=(
"r/archlinux"
"r/bash"
"r/commandline"
"r/emacs"
"r/emacs"
"r/freesoftware"
"r/linux"
"r/linux4noobs"
"r/linuxmasterrace"
"r/linuxquestions"
"r/suckless"
"r/Ubuntu"
"r/unixporn"
"r/vim"
)

# Search engine config 
declare -A websearch
# Syntax:
# websearch[name]="https://www.example.com/search?q="

# Search Engines
websearch[bing]="https://www.bing.com/search?q="
websearch[brave]="https://search.brave.com/search?q="
websearch[duckduckgo]="https://duckduckgo.com/?q="
websearch[gemini search \(https\)]="https://portal.mozz.us/gemini/geminispace.info/search%3F"
websearch[google]="https://www.google.com/search?q="
websearch[qwant]="https://www.qwant.com/?q="
websearch[swisscows]="https://swisscows.com/web?query="
websearch[yandex]="https://yandex.com/search/?text="
# Information/News
websearch[bbcnews]="https://www.bbc.co.uk/search?q="
websearch[cnn]="https://www.cnn.com/search?q="
websearch[googlenews]="https://news.google.com/search?q="
websearch[wikipedia]="https://en.wikipedia.org/w/index.php?search="
websearch[wiktionary]="https://en.wiktionary.org/w/index.php?search="
# Social Media
websearch[reddit]="https://www.reddit.com/search/?q="
websearch[odysee]="https://odysee.com/$/search?q="
websearch[youtube]="https://www.youtube.com/results?search_query="
# Online Shopping
websearch[amazon]="https://www.amazon.com/s?k="
websearch[craigslist]="https://www.craigslist.org/search/sss?query="
websearch[ebay]="https://www.ebay.com/sch/i.html?&_nkw="
websearch[gumtree]="https://www.gumtree.com/search?search_category=all&q="
# Linux
websearch[archaur]="https://aur.archlinux.org/packages/?O=0&K="
websearch[archpkg]="https://archlinux.org/packages/?sort=&q="
websearch[archwiki]="https://wiki.archlinux.org/index.php?search="
websearch[debianpkg]="https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords="
# Development
websearch[github]="https://github.com/search?q="
websearch[gitlab]="https://gitlab.com/search?search="
websearch[googleOpenSource]="https://opensource.google/projects/search?q="
websearch[sourceforge]="https://sourceforge.net/directory/?q="
websearch[stackoverflow]="https://stackoverflow.com/search?q="
# Etc

# dm-youtube config
# Think of these as your "subscribed channels", name the channel in the square brackets then put the channel URL in the quotation marks
# Syntax: youtube_channels[name]="https://www.youtube.com/link/to/channel"

declare -A youtube_channels
youtube_channels[distrotube]="https://www.youtube.com/c/DistroTube/featured"

# dm-colpick config
declare -A colpick_list
colpick_list[black]="#282a36"
colpick_list[red]="#ff5555"
colpick_list[green]="#5af78e"
colpick_list[yellow]="#f1fa8c"
colpick_list[blue]="#57c7ff"
colpick_list[magenta]="#ff6ac1"
colpick_list[cyan]="#8be9fd"
colpick_list[white]="#f1f1f0"
colpick_list[orange]="#ffb86c"
colpick_list[purple]="#bd9cf9"

# dm-translate config

# dm-translate currently supports two translation services, LibreTranslate and Lingva Translate.
# LibreTranslate uses the free software (Expat/MIT licensed) Argos Translate library for translation.
# Lingva Translate uses the Google Translate (dis)service for translation, but this is fully server-side and Google will not see your IP.
# Both are free software services that can be self-hosted.
# If you want more languages (or need a specific language not in the Argos library) you should chose Lingva Translate.
# If you want to get away from Google and/or want a fully free software implementation you should use LibreTranslate.
# The choice is yours...
translate_service="libre"
# translate_service="lingva"
libretranslate_instance="https://libretranslate.de"
lingva_instance="https://lingva.ml"

# Uncomment to manually set the languages dm-translate will show
# LibreTranslate languages:
#   - `curl -Ss "https://libretranslate.de/languages" | jq`
# Lingva Translate languages:
#   - `curl -Ss "https://lingva.ml/api/v1/languages/source" | jq`
# translate_list="manual"
# declare -A lang_map
# lang_map[Spanish]=es
# lang_map[English]=en
# lang_map[Automatic]=auto

# dm-weather config
declare -A weather_location
# weather_location[New York]="New+York"
# weather_opts="m" # Always use metric units (celsius)
# weather_opts="u" # Always use US units (fahrenheit)
# see: https://github.com/chubin/wttr.in

# dm-currencies config

# Chose how you want to display the currencies (default: "names")
# currency_names="codes"

# "auto" will get currencies dynamically, "manual" will only use the currencies you define (default: "auto")
# defined currencies will still be included when set to auto
# currency_method="manual"

declare -A currencies
# currencies[Dollar]="USD"
# currencies[Pound]="GBP"
# currencies[Monero]="XMR"
# see: https://rate.sx/:currencies and https://rate.sx/:coins

_revision=22
